module.exports = {
    env: {
        browser: true,
        es2021: true,
    },
    extends: [
        "eslint:recommended",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "prettier",
    ],
    globals: {
        JSX: "readonly",
    },
    parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        project: ["./tsconfig.json"],
        ecmaFeatures: {
            jsx: true,
        },
    },
    plugins: ["react", "@typescript-eslint", "import"],
    settings: {
        react: {
            version: "detect",
        },
    },
    rules: {
        "react/react-in-jsx-scope": "off",

        // TypeScript Extension Rules - https://typescript-eslint.io/rules/#extension-rules
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "no-array-constructor": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": [
            "error",
            {
                ignoreOnInitialization: false,
            },
        ],
        "@typescript-eslint/no-throw-literal": [
            "error",
            {
                allowThrowingAny: false,
                allowThrowingUnknown: false,
            },
        ],
        "@typescript-eslint/no-unused-expressions": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "require-await": "warn",
        "@typescript-eslint/require-await": "error",

        // Possible Problems - https://eslint.org/docs/latest/rules/#possible-problems
        "array-callback-return": "error",
        "constructor-super": "error",
        "for-direction": "error",
        "getter-return": "error",
        "no-async-promise-executor": "error",
        "no-class-assign": "error",
        "no-compare-neg-zero": "error",
        "no-cond-assign": "error",
        "no-const-assign": "error",
        "no-constant-condition": "error",
        "no-constructor-return": "error",
        "no-control-regex": "error",
        "no-debugger": "warn",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-case": "error",
        "no-empty-character-class": "error",
        "no-empty-pattern": "error",
        "no-ex-assign": "error",
        "no-fallthrough": "error",
        "no-func-assign": "error",
        "no-import-assign": "error",
        "no-inner-declarations": ["error", "both"],
        "no-invalid-regexp": "error",
        "no-irregular-whitespace": "error",
        "no-loss-of-precision": "error",
        "no-misleading-character-class": "error",
        "no-new-symbol": "error",
        "no-obj-calls": "error",
        "no-prototype-builtins": "error",
        "no-self-assign": "warn",
        "no-self-compare": "warn",
        "no-setter-return": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-this-before-super": "error",
        "no-undef": "error",
        "no-unmodified-loop-condition": "error",
        "no-unreachable": "warn",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unsafe-optional-chaining": "error",
        "no-unused-vars": "warn",
        "no-useless-backreference": "error",
        "use-isnan": "error",
        "valid-typeof": "error", // Suggestions - https://eslint.org/docs/latest/rules/#suggestions
        curly: "warn",
        "default-param-last": "error",
        eqeqeq: "error",
        "func-names": ["warn", "never"],
        "no-case-declarations": "warn",
        "no-delete-var": "error",
        "no-extend-native": "warn",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "warn",
        "no-global-assign": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": "error",
        "no-implied-eval": "error",
        "no-invalid-this": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-multi-assign": "error",
        "no-new-func": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-regex-spaces": "warn",
        "no-restricted-syntax": [
            "warn",
            {
                selector: "CallExpression[callee.name='String']",
                message:
                    "Don't use the String function. Use .toString() instead.",
            },
            {
                selector: "CallExpression[callee.name='Number']",
                message:
                    "Don't use the Number function. Use parseInt or parseFloat instead.",
            },
            {
                selector: "CallExpression[callee.name='Boolean']",
                message:
                    "Don't use the Boolean function. Use a strict comparison instead.",
            },
        ],
        "no-return-assign": "error",
        "no-script-url": "error",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-unused-expressions": "warn",
        "no-useless-call": "error",
        "no-useless-catch": "warn",
        "no-useless-computed-key": "warn",
        "no-useless-concat": "warn",
        "no-useless-escape": "warn",
        "no-useless-rename": "warn",
        "no-useless-return": "warn",
        "no-var": "error",
        "no-with": "error",
        "operator-assignment": "warn",
        "prefer-arrow-callback": "warn",
        "prefer-const": "warn",
        "prefer-numeric-literals": "warn",
        "prefer-object-spread": "warn",
        "prefer-promise-reject-errors": "error",
        "prefer-rest-params": "warn",
        "prefer-spread": "warn",
        "prefer-template": "warn",
    },
}
