name: Create Python release

#on:
#  release:
#    types: [published]

on:
  push:
      tags: ['py*.*.*'] 

env:
  RUST_TOOLCHAIN: nightly-2023-06-23
  PYTHON_VERSION: '3.9'
  MATURIN_VERSION: '1.1.0'
  
defaults:
  run:
    shell: bash

jobs:
  manylinux-x64_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install Node
        run: npm install
        working-directory: frontend
      
      - name: Build Node
        run: npm run build
        working-directory: frontend

      - name: Publish wheel
        uses: messense/maturin-action@v1
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
          RUSTFLAGS: -C target-feature=+fxsr,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx,+fma
        with:
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          maturin-version: ${{ env.MATURIN_VERSION }}
          command: publish
          args: -m pyultima/Cargo.toml  --all-features --skip-existing -o wheels -u anatoly.bugakov

  # Needed for Docker on Apple M1
  manylinux-aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install Node
        run: npm install
        working-directory: frontend
      
      - name: Build Node
        run: npm run build
        working-directory: frontend

      - name: Publish wheel
        uses: messense/maturin-action@v1
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
          JEMALLOC_SYS_WITH_LG_PAGE: 16
        with:
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-unknown-linux-gnu
          maturin-version: ${{ env.MATURIN_VERSION }}
          command: publish
          args: -m pyultima/Cargo.toml  --all-features --skip-existing --no-sdist -o wheels -i python -u anatoly.bugakov

#  # Compiled without avx flag, could be useful for sunning on old CPUs (pre 2011)
#  manylinux-x64_64-lts-cpu:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ env.PYTHON_VERSION }}
#      
#      - name: Setup node
#        uses: actions/setup-node@v1
#        with:
#          node-version: "16.x"
#
#      - name: Install Node
#        run: npm install
#        working-directory: frontend
#      
#      - name: Build Node
#        run: npm run build
#        working-directory: frontend
#
#      - name: Prepare lts-cpu
#        run: sed -i 's/name = "ultima"/name = "pyultima-lts-cpu"/' pyultima/pyproject.toml
#
#      - name: Publish wheel
#        uses: messense/maturin-action@v1
#        env:
#          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
#          RUSTFLAGS: -C target-feature=+fxsr,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt --cfg use_mimalloc
#        with:
#          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
#          maturin-version: ${{ env.MATURIN_VERSION }}
#          command: publish
#          args: -m pyultima/Cargo.toml  --all-features --skip-existing -o wheels -u anatoly.bugakov

  win-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"

      - name: Install Node
        run: npm install
        working-directory: frontend
      
      - name: Build Node
        run: npm run build
        working-directory: frontend

      - name: Publish wheel
        uses: messense/maturin-action@v1
        env:
          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
          RUSTFLAGS: -C target-feature=+fxsr,+sse,+sse2,+sse3,+sse4.1,+sse4.2
        with:
          rust-toolchain: ${{ env.RUST_TOOLCHAIN }}
          maturin-version: ${{ env.MATURIN_VERSION }}
          command: publish
          args: -m pyultima/Cargo.toml  --all-features --no-sdist --skip-existing -o wheels -i python -u anatoly.bugakov

#  This job fails - understand/check why
#  macos-aarch64:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ env.PYTHON_VERSION }}
#
#      - name: Set up Rust
#        uses: dtolnay/rust-toolchain@master
#        with:
#          toolchain: nightly-2022-12-20
#
#      - name: Set up Rust targets
#        run: rustup target add aarch64-apple-darwin
#
#      - name: Publish wheel
#        uses: messense/maturin-action@v1
#        env:
#          MATURIN_PASSWORD: ${{ secrets.PYPI_PASS }}
#        with:
#          maturin-version: ${{ env.MATURIN_VERSION }}
#          command: publish
#          args: -m pyultima/Cargo.toml  --all-features --target aarch64-apple-darwin --no-sdist -o wheels -i python -u anatoly.bugakov
